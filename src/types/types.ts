/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

import { Variant } from "@prisma/client";

export interface paths {
  "/hostels": {
    /** Show all hostels details */
    get: {
      parameters: {
        query?: {
          location?: string;
          gender?: "MALE" | "FEMALE" | "MIXED";
          year?: "FIRST" | "SECOND" | "THIRD" | "FOURTH";
          /** @description Limit the number of results per page (default: 10). */
          limit?: number;
          /** @description Start index of results (zero-based). */
          start?: number;
        };
      };
      responses: {
        /** @description A list of all hostels */
        200: {
          content: {
            "application/json": components["schemas"]["Hostel"][];
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal Server Error - Something went wrong on the server side. */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Create a new hostel */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Hostel"];
        };
      };
      responses: {
        /** @description The created hostel */
        201: {
          content: {
            "application/json": components["schemas"]["Hostel"];
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal Server Error - Something went wrong on the server side. */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/hostels/{id}": {
    /** Get a hostel by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description The hostel data */
        200: {
          content: {
            "application/json": components["schemas"]["Hostel"];
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Hostel not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Update a hostel by ID */
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Hostel"];
        };
      };
      responses: {
        /** @description The updated hostel */
        200: {
          content: {
            "application/json": components["schemas"]["Hostel"];
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Hostel not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Delete a hostel by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description The hostel was deleted */
        204: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Hostel not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/hostels/{id}/rooms": {
    /** List all rooms */
    get: {
      responses: {
        /** @description A list of rooms */
        200: {
          content: {
            "application/json": components["schemas"]["Room"][];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Hostel not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Create a new room */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Room"];
        };
      };
      responses: {
        /** @description The created room */
        201: {
          content: {
            "application/json": components["schemas"]["Room"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Hostel not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/hostels/{id}/rooms/{roomId}": {
    /** Get a room by ID */
    get: {
      parameters: {
        path: {
          id: number;
          roomId: number;
        };
      };
      responses: {
        /** @description The room data */
        200: {
          content: {
            "application/json": components["schemas"]["Room"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Room not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Update a room by ID */
    put: {
      parameters: {
        path: {
          id: number;
          roomId: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Room"];
        };
      };
      responses: {
        /** @description The updated room */
        200: {
          content: {
            "application/json": components["schemas"]["Room"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Room not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Delete a room by ID */
    delete: {
      parameters: {
        path: {
          id: number;
          roomId: number;
        };
      };
      responses: {
        /** @description The room was deleted */
        204: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Room not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/users": {
    /** List all users */
    get: {
      responses: {
        /** @description A list of users */
        200: {
          content: {
            "application/json": components["schemas"]["User"][];
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Create a new user */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      responses: {
        /** @description The created user */
        201: {
          content: {
            "application/json": components["schemas"]["User"];
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/users/{id}": {
    /** Get a user by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description The user data */
        200: {
          content: {
            "application/json": components["schemas"]["User"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description User not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Update a user by ID */
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["User"];
        };
      };
      responses: {
        /** @description The updated user */
        200: {
          content: {
            "application/json": components["schemas"]["User"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description User not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Delete a user by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description The user was deleted */
        204: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description User not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/students": {
    /** List all students */
    get: {
      responses: {
        /** @description A list of students */
        200: {
          content: {
            "application/json": components["schemas"]["Student"][];
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Create a new student */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Student"];
        };
      };
      responses: {
        /** @description The created student */
        201: {
          content: {
            "application/json": components["schemas"]["Student"];
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/students/{id}": {
    /** Get a student by ID */
    get: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description The student data */
        200: {
          content: {
            "application/json": components["schemas"]["Student"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Student not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Update a student by ID */
    put: {
      parameters: {
        path: {
          id: string;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["Student"];
        };
      };
      responses: {
        /** @description The updated student */
        200: {
          content: {
            "application/json": components["schemas"]["Student"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Student not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Delete a student by ID */
    delete: {
      parameters: {
        path: {
          id: string;
        };
      };
      responses: {
        /** @description The student was deleted */
        204: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Student not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/private-boarding-owners": {
    /** List all private boarding owners */
    get: {
      responses: {
        /** @description A list of private boarding owners */
        200: {
          content: {
            "application/json": components["schemas"]["PrivateBoardingOwner"][];
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Create a new private boarding owner */
    post: {
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PrivateBoardingOwner"];
        };
      };
      responses: {
        /** @description The created private boarding owner */
        201: {
          content: {
            "application/json": components["schemas"]["PrivateBoardingOwner"];
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/private-boarding-owners/{id}": {
    /** Get a private boarding owner by ID */
    get: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description The private boarding owner data */
        200: {
          content: {
            "application/json": components["schemas"]["PrivateBoardingOwner"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Private boarding owner not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Update a private boarding owner by ID */
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": components["schemas"]["PrivateBoardingOwner"];
        };
      };
      responses: {
        /** @description The updated private boarding owner */
        200: {
          content: {
            "application/json": components["schemas"]["PrivateBoardingOwner"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Private boarding owner not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Delete a private boarding owner by ID */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description The private boarding owner was deleted */
        204: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Private boarding owner not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/exchange-requests/{id}/update-state": {
    /** Update exchange request state to available */
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            /** @enum {string} */
            status?: "AVAILABLE";
          };
        };
      };
      responses: {
        /** @description The updated exchange request */
        200: {
          content: {
            "application/json": components["schemas"]["ExchangeRequest"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Exchange request not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/apply-hostel": {
    /** Apply for a hostel */
    post: {
      requestBody?: {
        content: {
          "application/json": {
            hostelId?: number;
            studentId?: string;
          };
        };
      };
      responses: {
        /** @description Applied for hostel */
        201: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/room-requests": {
    /** Show all swap requests */
    get: {
      responses: {
        /** @description A list of swap requests */
        200: {
          content: {
            "application/json": components["schemas"]["ExchangeRequest"][];
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Apply for an exchange */
    post: {
      requestBody?: {
        content: {
          "application/json": {
            fromUserId?: string;
            toUserId?: string;
          };
        };
      };
      responses: {
        /** @description Applied for exchange */
        201: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/room-requests/{id}": {
    /** Apply a swap request */
    put: {
      parameters: {
        path: {
          id: number;
        };
      };
      requestBody?: {
        content: {
          "application/json": {
            fromUserId?: string;
            toUserId?: string;
          };
        };
      };
      responses: {
        /** @description The apply swap request */
        200: {
          content: {
            "application/json": components["schemas"]["ExchangeRequest"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Swap request not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
    /** Accept or reject a swap request */
    delete: {
      parameters: {
        path: {
          id: number;
        };
      };
      responses: {
        /** @description The updated swap request */
        200: {
          content: {
            "application/json": components["schemas"]["ExchangeRequest"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Swap request not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/allocation-students": {
    /** Allocate students to hostels */
    post: {
      requestBody?: {
        content: {
          "application/json": {
            /** @enum {string} */
            method?: "manual" | "random";
            allocations?: {
              studentId?: string;
              hostelId?: number;
            }[];
          };
        };
      };
      responses: {
        /** @description Students allocated to hostels */
        200: {
          content: {
            "application/json": {
              message?: string;
            };
          };
        };
        /** @description Bad request */
        400: {
          content: never;
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
  "/account": {
    /** Show account details */
    get: {
      parameters: {
        query: {
          userId: string;
        };
      };
      responses: {
        /** @description The user account details */
        200: {
          content: {
            "application/json": components["schemas"]["User"];
          };
        };
        /** @description Bad request */
        400: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description User not found */
        404: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
        /** @description Internal server error */
        500: {
          content: {
            "application/json": components["schemas"]["Error"];
          };
        };
      };
    };
  };
}

export type webhooks = Record<string, never>;

export interface components {
  schemas: {
    Error: {
      error: string;
    };
    User: {
      /** Format: int64 */
      id?: number;
      username: string;
      password: string;
      /** Format: email */
      email: string;
      phoneNumber: string;
      role: components["schemas"]["Role"];
      student?: components["schemas"]["Student"];
      privateBoardingOwner?: components["schemas"]["PrivateBoardingOwner"];
    };
    /** @enum {string} */
    Role: "ADMIN" | "STANDARD_USER";
    Student: {
      studentId: string;
      user?: components["schemas"]["User"];
      /** Format: int64 */
      userId: number;
      room?: components["schemas"]["Room"];
      /** Format: int64 */
      roomId?: number;
      exchangeRequestsFromUser?: components["schemas"]["ExchangeRequest"][];
      exchangeRequestsToUser?: components["schemas"]["ExchangeRequest"][];
    };
    PrivateBoardingOwner: {
      /** Format: int64 */
      id?: number;
      user?: components["schemas"]["User"];
      /** Format: int64 */
      userId: number;
      privateBoardings?: components["schemas"]["PrivateBoarding"][];
    };
    Hostel: {
      /** Format: int64 */
      id?: number;
      name: string;
      genderType: components["schemas"]["GenderType"];
      /** Format: float */
      distance: number;
      /** @default Not specified */
      location?: string;
      year: components["schemas"]["Year"];
      rooms?: components["schemas"]["Room"][];
      variant: Variant;
    };
    /** @enum {string} */
    GenderType: "MALE" | "FEMALE" | "MIXED";
    /** @enum {string} */
    Year: "FIRST" | "SECOND" | "THIRD" | "FOURTH";
    Room: {
      /** Format: int64 */
      id?: number;
      /** @default 2 */
      capacity?: number;
      beds: number;
      hostel?: components["schemas"]["Hostel"];
      /** Format: int64 */
      hostelId: number;
      students?: components["schemas"]["Student"][];
    };
    ExchangeRequest: {
      /** Format: int64 */
      id?: number;
      status?: components["schemas"]["RequestStatus"];
      fromUser?: components["schemas"]["Student"];
      fromUserId: string;
      toUser?: components["schemas"]["Student"];
      toUserId?: string;
    };
    /** @enum {string} */
    RequestStatus: "PENDING" | "ACCEPTED" | "REJECTED";
    PrivateBoarding: {
      /** Format: int64 */
      id?: number;
      name: string;
      /** @default Not specified */
      location?: string;
      /** Format: float */
      distance: number;
      owner?: components["schemas"]["PrivateBoardingOwner"];
      /** Format: int64 */
      ownerId: number;
      description: string;
      boardingRooms?: components["schemas"]["BoardingRoom"][];
    };
    BoardingRoom: {
      /** Format: int64 */
      id?: number;
      capacity: number;
      facilities: string;
      boarding?: components["schemas"]["PrivateBoarding"];
      /** Format: int64 */
      boardingId: number;
      /** Format: float */
      rent: number;
      description: string;
    };
  };
  responses: never;
  parameters: never;
  requestBodies: never;
  headers: never;
  pathItems: never;
}

export type $defs = Record<string, never>;

export type external = Record<string, never>;

export type operations = Record<string, never>;
